{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "beade0ea",
   "metadata": {},
   "source": [
    "# Laboratorio 1- básico de python \n",
    "## Gabriela Cruz 8-1008-430 | programación para ingenieros 2022-2\n",
    "Aplicando matematicas en python :D "
   ]
  },
  {
   "cell_type": "markdown",
   "id": "a150942f",
   "metadata": {},
   "source": [
    "**Problema #1** \n",
    "Suponga que tiene 100 dólares, los cuales ud invierte y adquiere un 10% anual de retorno. Añada el código y calcule el interes compuesto para 7 años de inversión bancaria e imprima el resultado. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "a781dbb3",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Calculando el interes compuesto"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "8c1b834d",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "tu interes compuesto luego de 7 años será de: \n",
      "194.87171000000012\n"
     ]
    }
   ],
   "source": [
    "Inversión=100 \n",
    "Años=7 \n",
    "InteresAnual=10 \n",
    "interesCompuesto= 100*(1+0.1)**7\n",
    "print(\"tu interes compuesto luego de 7 años será de: \") \n",
    "print(interesCompuesto)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "b5aa63ce",
   "metadata": {},
   "source": [
    "**Problema #2** Cree una variable llamada 'ahorros' con el valor 100\n",
    "\n",
    "Imprima la variable "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "66e0ad67",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "100\n"
     ]
    }
   ],
   "source": [
    "Ahorros=100 \n",
    "print(Ahorros)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "718defea",
   "metadata": {},
   "source": [
    "**Problema #3** En vez de calcular con los valores actuales ud puede utilizar variables.\n",
    "\n",
    "Siga los siguientes pasos para realizarlo de manera con variables. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "d6d016dd",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "194.87171000000012\n"
     ]
    }
   ],
   "source": [
    "ahorro=int(100)\n",
    "mult_anual=float(1.1)\n",
    "result=ahorro*(mult_anual)**7\n",
    "print(result)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "bf4399e2",
   "metadata": {},
   "source": [
    "**Problema #4** Crear una nueva variable llamada 'desc' de tipo 'string' que contenca la palabra 'cadena de texto' Crear un nuevo booleano llamado 'profit' que tenga asignado el valor True. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "52f056f5",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "cadena de texto\n",
      "True\n"
     ]
    }
   ],
   "source": [
    "desc=str(\"cadena de texto\")\n",
    "print(desc)\n",
    "profit=bool(True)\n",
    "print(bool(profit))"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f83d1e49",
   "metadata": {},
   "source": [
    "**Problema #5** Calcule el producto de los ahorros y el multiplicador, almacene el resultado en la palabra año. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "b877823d",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "110.00000000000001\n",
      "<class 'float'>\n",
      "interes compuestointeres compuesto\n"
     ]
    }
   ],
   "source": [
    "ahorros = 100\n",
    "mult = float (1.1)\n",
    "desc = 'interes compuesto'\n",
    "año1 = ahorro*(mult)\n",
    "print(año1)\n",
    "print(type(año1))\n",
    "dobledesc= desc + desc \n",
    "print(dobledesc)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "9857645a",
   "metadata": {},
   "source": [
    "**Problema #6** Arregle la cadena para imprimir. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "139cecbe",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Empezamos con\n",
      "100\n",
      "y ahora tenemos\n",
      "194.87171000000012\n",
      "Que bien!\n"
     ]
    }
   ],
   "source": [
    "ahorros = 100\n",
    "resultado = 100*1.1**7 \n",
    "print(\"Empezamos con\")\n",
    "print(100) \n",
    "print(\"y ahora tenemos\")\n",
    "print(float(194.87171000000012))\n",
    "print(\"Que bien!\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "8b71c6cd",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'str'>\n",
      "3.1415926\n",
      "<class 'float'>\n"
     ]
    }
   ],
   "source": [
    "pi_string = \"3.1415926\"\n",
    "print(type(pi_string))\n",
    "\n",
    "pi_float= float(pi_string)\n",
    "print(pi_float)\n",
    "print(type(pi_float))"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.13"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}

